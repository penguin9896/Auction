import React, { Component } from 'react';
import Web3 from 'web3';
import Identicon from 'identicon.js';
import './App.css';
import Decentragram from '../abis/Decentragram.json'
import Navbar from './Navbar'
import Main from './Main'
const POLL_INTERVAL_MS = 1000;
let timer = 120;
const contractAuctionABI = [ { "inputs": [], "name": "cancelAuction", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "finalizeAuction", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "placeBid", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "stateMutability": "payable", "type": "function" }, { "inputs": [ { "internalType": "address payable", "name": "eoa", "type": "address" } ], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [ { "indexed": false, "internalType": "address", "name": "", "type": "address" }, { "indexed": false, "internalType": "string", "name": "", "type": "string" } ], "name": "winnerevent", "type": "event" }, { "stateMutability": "payable", "type": "receive" }, { "inputs": [], "name": "auctionState", "outputs": [ { "internalType": "enum Auction.State", "name": "", "type": "uint8" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" } ], "name": "bids", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "endBlock", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "flag", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "highestBidder", "outputs": [ { "internalType": "address payable", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "highestBindingBid", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "inc", "outputs": [ { "internalType": "int256", "name": "", "type": "int256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "ipfsHash", "outputs": [ { "internalType": "string", "name": "", "type": "string" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "length", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "name": "mapl", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "owner", "outputs": [ { "internalType": "address payable", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "startBlock", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" } ];
  
let AuctionAddress = "";
  let state ='Auction is undergoing creation. It will take a couple of seconds';
  
let Owner = "";

let AuctionCreatorAddress="";
let hasFinished = false;

let HighestBidder='';
let HighestBindingBid =0;
let auctioncontract;

let AuctionHasEned = false;

//Enumerator Auction {}


    const rpcUrl = "https://rinkeby.infura.io/v3/d1fdd8caeb5248ec83f1413e78e546f1";

    const web3 = new Web3(rpcUrl);

    web3.eth.accounts.wallet.add({
      privateKey: '0x4278b9f4c1a096f23336cef0c54b84bf8ec381504568ed11a73c3a07aa8b2db9',
      address: '0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C'
  });



class App extends Component {
 //auctioncreator = {};
  

  constructor(props) {

  // console.log(web3.eth.accounts
  //   );

  const ContractABI =[ { "inputs": [], "name": "createAuction", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "sets", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [], "name": "add", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "name": "auctions", "outputs": [ { "internalType": "contract Auction", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "n", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "nm", "outputs": [ { "internalType": "string", "name": "", "type": "string" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "numberofcontracts", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "numberofcontracts_g", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "owner", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "v", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" } ]

//const contractAddress = "0x558b22595717B253336587c47fdc5c685c2cB526";

const mycontract = new web3.eth.Contract(ContractABI);




  const bc = "0x6080604052600060025560006003556040518060400160405280600381526020017f6173640000000000000000000000000000000000000000000000000000000000815250600490805190602001906200005b9291906200017e565b503480156200006957600080fd5b5033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000bb620000c160201b60201c565b6200038a565b60016000815480929190620000d690620002de565b9190505550600033604051620000ec906200020f565b620000f891906200024d565b604051809103906000f08015801562000115573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8280546200018c90620002a8565b90600052602060002090601f016020900481019282620001b05760008555620001fc565b82601f10620001cb57805160ff1916838001178555620001fc565b82800160010185558215620001fc579182015b82811115620001fb578251825591602001919060010190620001de565b5b5090506200020b91906200021d565b5090565b6118ef80620024fc83390190565b5b80821115620002385760008160009055506001016200021e565b5090565b62000247816200026a565b82525050565b60006020820190506200026460008301846200023c565b92915050565b600062000277826200027e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006002820490506001821680620002c157607f821691505b60208210811415620002d857620002d76200035b565b5b50919050565b6000620002eb826200029e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156200032157620003206200032c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b612162806200039a6000396000f3fe60806040523480156200001157600080fd5b5060043610620000ac5760003560e01c80635930df9f116200006f5780635930df9f146200016f57806359a9cf1e146200017b5780637c2efcba146200019d5780638da5cb5b14620001bf578063f581144714620001e157620000ac565b80632e52d60614620000b1578063433eddbe14620000d357806349282d8414620000f55780634f2be91f1462000117578063571a26a01462000139575b600080fd5b620000bb620001ed565b604051620000ca919062000647565b60405180910390f35b620000dd620001f3565b604051620000ec919062000647565b60405180910390f35b620000ff620001fd565b6040516200010e919062000623565b60405180910390f35b6200012162000293565b604051620001309190620005cc565b60405180910390f35b6200015760048036038101906200015191906200051b565b620002b9565b60405162000166919062000606565b60405180910390f35b62000179620002f9565b005b6200018562000357565b60405162000194919062000647565b60405180910390f35b620001a76200035d565b604051620001b6919062000647565b60405180910390f35b620001c962000363565b604051620001d89190620005cc565b60405180910390f35b620001eb62000389565b005b60025481565b6000600154905090565b600480546200020c9062000730565b80601f01602080910402602001604051908101604052809291908181526020018280546200023a9062000730565b80156200028b5780601f106200025f576101008083540402835291602001916200028b565b820191906000526020600020905b8154815290600101906020018083116200026d57829003601f168201915b505050505081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008181548110620002ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560028190555060006040518060400160405280600981526020017f4153646173646173640000000000000000000000000000000000000000000000815250905080600490805190602001906200035392919062000446565b5050565b60015481565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160008154809291906200039e9062000766565b9190505550600033604051620003b490620004d7565b620003c09190620005e9565b604051809103906000f080158015620003dd573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054620004549062000730565b90600052602060002090601f016020900481019282620004785760008555620004c4565b82601f106200049357805160ff1916838001178555620004c4565b82800160010185558215620004c4579182015b82811115620004c3578251825591602001919060010190620004a6565b5b509050620004d39190620004e5565b5090565b6118ef806200083e83390190565b5b8082111562000500576000816000905550600101620004e6565b5090565b600081359050620005158162000823565b92915050565b6000602082840312156200052e57600080fd5b60006200053e8482850162000504565b91505092915050565b620005528162000694565b82525050565b620005638162000680565b82525050565b6200057481620006d2565b82525050565b6000620005878262000664565b6200059381856200066f565b9350620005a5818560208601620006fa565b620005b08162000812565b840191505092915050565b620005c681620006c8565b82525050565b6000602082019050620005e3600083018462000558565b92915050565b600060208201905062000600600083018462000547565b92915050565b60006020820190506200061d600083018462000569565b92915050565b600060208201905081810360008301526200063f81846200057a565b905092915050565b60006020820190506200065e6000830184620005bb565b92915050565b600081519050919050565b600082825260208201905092915050565b60006200068d82620006a8565b9050919050565b6000620006a182620006a8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620006df82620006e6565b9050919050565b6000620006f382620006a8565b9050919050565b60005b838110156200071a578082015181840152602081019050620006fd565b838111156200072a576000848401525b50505050565b600060028204905060018216806200074957607f821691505b6020821081141562000760576200075f620007e3565b5b50919050565b60006200077382620006c8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620007a957620007a8620007b4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6200082e81620006c8565b81146200083a57600080fd5b5056fe60806040523480156200001157600080fd5b50604051620018ef380380620018ef833981810160405281019062000037919062000200565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460016101000a81548160ff02191690836003811115620000c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550436001819055506a52b7d2dcc80cd2e4000000600154620000eb91906200022c565b6002819055506040518060800160405280605481526020016200189b60549139600390805190602001906200012292919062000139565b50670de0b6b3a7640000600a819055505062000375565b8280546200014790620002c7565b90600052602060002090601f0160209004810192826200016b5760008555620001b7565b82601f106200018657805160ff1916838001178555620001b7565b82800160010185558215620001b7579182015b82811115620001b657825182559160200191906001019062000199565b5b509050620001c69190620001ca565b5090565b5b80821115620001e5576000816000905550600101620001cb565b5090565b600081519050620001fa816200035b565b92915050565b6000602082840312156200021357600080fd5b60006200022384828501620001e9565b91505092915050565b60006200023982620002bd565b91506200024683620002bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200027e576200027d620002fd565b5b828201905092915050565b600062000296826200029d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006002820490506001821680620002e057607f821691505b60208210811415620002f757620002f66200032c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620003668162000289565b81146200037257600080fd5b50565b61151680620003856000396000f3fe6080604052600436106100ec5760003560e01c8063890eba681161008a578063c623674f11610059578063c623674f14610423578063ecfc7ecc1461044e578063f5b56c561461046c578063f77282ab1461049757610235565b8063890eba681461038b5780638da5cb5b146103b65780638fa8b790146103e157806391f90157146103f857610235565b8063371303c0116100c6578063371303c0146102cd57806348cd4cb1146102f857806362ea82db146103235780637fb450991461036057610235565b806302d0f2431461023a578063083c6323146102775780631f7b6d32146102a257610235565b36610235576002600381111561012b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600460019054906101000a900460ff166003811115610173577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1480156101cd5750600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15610211577f95b26cac9fdd092138bb14a06ea0c90bbc1a7d27c74b5ba7dfb6440b29448539336003604051610204929190611107565b60405180910390a1610233565b6102196104ae565b600460006101000a81548160ff0219169083151502179055505b005b600080fd5b34801561024657600080fd5b50610261600480360381019061025c9190610f95565b61093f565b60405161026e91906110d1565b60405180910390f35b34801561028357600080fd5b5061028c61097e565b60405161029991906111aa565b60405180910390f35b3480156102ae57600080fd5b506102b7610984565b6040516102c491906111aa565b60405180910390f35b3480156102d957600080fd5b506102e261098a565b6040516102ef919061116d565b60405180910390f35b34801561030457600080fd5b5061030d610990565b60405161031a91906111aa565b60405180910390f35b34801561032f57600080fd5b5061034a60048036038101906103459190610f6c565b610996565b60405161035791906111aa565b60405180910390f35b34801561036c57600080fd5b506103756109ae565b6040516103829190611152565b60405180910390f35b34801561039757600080fd5b506103a06109c1565b6040516103ad9190611137565b60405180910390f35b3480156103c257600080fd5b506103cb6109d4565b6040516103d891906110ec565b60405180910390f35b3480156103ed57600080fd5b506103f66109f8565b005b34801561040457600080fd5b5061040d610aa3565b60405161041a91906110ec565b60405180910390f35b34801561042f57600080fd5b50610438610ac9565b6040516104459190611188565b60405180910390f35b6104566104ae565b6040516104639190611137565b60405180910390f35b34801561047857600080fd5b50610481610b57565b60405161048e91906111aa565b60405180910390f35b3480156104a357600080fd5b506104ac610b5d565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561050a57600080fd5b60015443101561051957600080fd5b60025443111561052857600080fd5b6006600081548092919061053b9061136e565b91905055506001600381111561057a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600460019054906101000a900460ff1660038111156105c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146105cc57600080fd5b655af3107a400034116105de57600080fd5b600034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461062b91906111f6565b9050600554811161063b57600080fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156107475780600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506009339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b600081548092919061073d906113b7565b919050555061078c565b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481116108775761086c600a548261080591906111f6565b60086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f27565b600581905550610937565b6108ef81600a5460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108ea91906111f6565b610f27565b60058190555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600191505090565b6009818154811061094f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600b5481565b60065481565b60015481565b60086020528060005260406000206000915090505481565b600460019054906101000a900460ff1681565b600460009054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a5057600080fd5b6003600460016101000a81548160ff02191690836003811115610a9c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054610ad69061133c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b029061133c565b8015610b4f5780601f10610b2457610100808354040283529160200191610b4f565b820191906000526020600020905b815481529060010190602001808311610b3257829003601f168201915b505050505081565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610bf657506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b610bff57600080fd5b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055490508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c70573d6000803e3d6000fd5b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d05919061124c565b9050600060086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610db4573d6000803e3d6000fd5b5060005b6001600b54610dc7919061124c565b811015610ed15760098181548110610e08577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ebd573d6000803e3d6000fd5b508080610ec9906113b7565b915050610db8565b506002600460016101000a81548160ff02191690836003811115610f1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050565b6000818311610f3857829050610f3c565b8190505b92915050565b600081359050610f51816114b2565b92915050565b600081359050610f66816114c9565b92915050565b600060208284031215610f7e57600080fd5b6000610f8c84828501610f42565b91505092915050565b600060208284031215610fa757600080fd5b6000610fb584828501610f57565b91505092915050565b610fc781611292565b82525050565b610fd681611280565b82525050565b610fe5816112a4565b82525050565b610ff4816112f7565b82525050565b611003816112c3565b82525050565b6000611014826111da565b61101e81856111e5565b935061102e818560208601611309565b6110378161148d565b840191505092915050565b6000815461104f8161133c565b61105981866111e5565b945060018216600081146110745760018114611086576110b9565b60ff19831686526020860193506110b9565b61108f856111c5565b60005b838110156110b157815481890152600182019150602081019050611092565b808801955050505b50505092915050565b6110cb816112ed565b82525050565b60006020820190506110e66000830184610fcd565b92915050565b60006020820190506111016000830184610fbe565b92915050565b600060408201905061111c6000830185610fcd565b818103602083015261112e8184611042565b90509392505050565b600060208201905061114c6000830184610fdc565b92915050565b60006020820190506111676000830184610feb565b92915050565b60006020820190506111826000830184610ffa565b92915050565b600060208201905081810360008301526111a28184611009565b905092915050565b60006020820190506111bf60008301846110c2565b92915050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b6000611201826112ed565b915061120c836112ed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561124157611240611400565b5b828201905092915050565b6000611257826112ed565b9150611262836112ed565b92508282101561127557611274611400565b5b828203905092915050565b600061128b826112cd565b9050919050565b600061129d826112cd565b9050919050565b60008115159050919050565b60008190506112be8261149e565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611302826112b0565b9050919050565b60005b8381101561132757808201518184015260208101905061130c565b83811115611336576000848401525b50505050565b6000600282049050600182168061135457607f821691505b602082108114156113685761136761145e565b5b50919050565b6000611379826112c3565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113ac576113ab611400565b5b600182019050919050565b60006113c2826112ed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113f5576113f4611400565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b600481106114af576114ae61142f565b5b50565b6114bb81611280565b81146114c657600080fd5b50565b6114d2816112ed565b81146114dd57600080fd5b5056fea2646970667358221220e1a90f4f1164577900b52d8ecd296b52016fd3d7408bd06140b3f79e420edfdf64736f6c6343000800003368747470733a2f2f697066732e696f2f697066732f516d57384d443963766b75567542745662524b6851434c455356396256534472556f4e636f65556571657a466a613f66696c656e616d653d6473702e747874a264697066735822122014e5a2e2ec00140de9529b185cdf04e8c9068bf7e6dc6abfe5a9ade610f1b0e864736f6c6343000800003360806040523480156200001157600080fd5b50604051620018ef380380620018ef833981810160405281019062000037919062000200565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460016101000a81548160ff02191690836003811115620000c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550436001819055506a52b7d2dcc80cd2e4000000600154620000eb91906200022c565b6002819055506040518060800160405280605481526020016200189b60549139600390805190602001906200012292919062000139565b50670de0b6b3a7640000600a819055505062000375565b8280546200014790620002c7565b90600052602060002090601f0160209004810192826200016b5760008555620001b7565b82601f106200018657805160ff1916838001178555620001b7565b82800160010185558215620001b7579182015b82811115620001b657825182559160200191906001019062000199565b5b509050620001c69190620001ca565b5090565b5b80821115620001e5576000816000905550600101620001cb565b5090565b600081519050620001fa816200035b565b92915050565b6000602082840312156200021357600080fd5b60006200022384828501620001e9565b91505092915050565b60006200023982620002bd565b91506200024683620002bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200027e576200027d620002fd565b5b828201905092915050565b600062000296826200029d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006002820490506001821680620002e057607f821691505b60208210811415620002f757620002f66200032c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620003668162000289565b81146200037257600080fd5b50565b61151680620003856000396000f3fe6080604052600436106100ec5760003560e01c8063890eba681161008a578063c623674f11610059578063c623674f14610423578063ecfc7ecc1461044e578063f5b56c561461046c578063f77282ab1461049757610235565b8063890eba681461038b5780638da5cb5b146103b65780638fa8b790146103e157806391f90157146103f857610235565b8063371303c0116100c6578063371303c0146102cd57806348cd4cb1146102f857806362ea82db146103235780637fb450991461036057610235565b806302d0f2431461023a578063083c6323146102775780631f7b6d32146102a257610235565b36610235576002600381111561012b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600460019054906101000a900460ff166003811115610173577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1480156101cd5750600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15610211577f95b26cac9fdd092138bb14a06ea0c90bbc1a7d27c74b5ba7dfb6440b29448539336003604051610204929190611107565b60405180910390a1610233565b6102196104ae565b600460006101000a81548160ff0219169083151502179055505b005b600080fd5b34801561024657600080fd5b50610261600480360381019061025c9190610f95565b61093f565b60405161026e91906110d1565b60405180910390f35b34801561028357600080fd5b5061028c61097e565b60405161029991906111aa565b60405180910390f35b3480156102ae57600080fd5b506102b7610984565b6040516102c491906111aa565b60405180910390f35b3480156102d957600080fd5b506102e261098a565b6040516102ef919061116d565b60405180910390f35b34801561030457600080fd5b5061030d610990565b60405161031a91906111aa565b60405180910390f35b34801561032f57600080fd5b5061034a60048036038101906103459190610f6c565b610996565b60405161035791906111aa565b60405180910390f35b34801561036c57600080fd5b506103756109ae565b6040516103829190611152565b60405180910390f35b34801561039757600080fd5b506103a06109c1565b6040516103ad9190611137565b60405180910390f35b3480156103c257600080fd5b506103cb6109d4565b6040516103d891906110ec565b60405180910390f35b3480156103ed57600080fd5b506103f66109f8565b005b34801561040457600080fd5b5061040d610aa3565b60405161041a91906110ec565b60405180910390f35b34801561042f57600080fd5b50610438610ac9565b6040516104459190611188565b60405180910390f35b6104566104ae565b6040516104639190611137565b60405180910390f35b34801561047857600080fd5b50610481610b57565b60405161048e91906111aa565b60405180910390f35b3480156104a357600080fd5b506104ac610b5d565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561050a57600080fd5b60015443101561051957600080fd5b60025443111561052857600080fd5b6006600081548092919061053b9061136e565b91905055506001600381111561057a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600460019054906101000a900460ff1660038111156105c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146105cc57600080fd5b655af3107a400034116105de57600080fd5b600034600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461062b91906111f6565b9050600554811161063b57600080fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156107475780600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506009339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b600081548092919061073d906113b7565b919050555061078c565b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481116108775761086c600a548261080591906111f6565b60086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f27565b600581905550610937565b6108ef81600a5460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108ea91906111f6565b610f27565b60058190555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600191505090565b6009818154811061094f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600b5481565b60065481565b60015481565b60086020528060005260406000206000915090505481565b600460019054906101000a900460ff1681565b600460009054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a5057600080fd5b6003600460016101000a81548160ff02191690836003811115610a9c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054610ad69061133c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b029061133c565b8015610b4f5780601f10610b2457610100808354040283529160200191610b4f565b820191906000526020600020905b815481529060010190602001808311610b3257829003601f168201915b505050505081565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610bf657506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b610bff57600080fd5b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055490508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c70573d6000803e3d6000fd5b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d05919061124c565b9050600060086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610db4573d6000803e3d6000fd5b5060005b6001600b54610dc7919061124c565b811015610ed15760098181548110610e08577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ebd573d6000803e3d6000fd5b508080610ec9906113b7565b915050610db8565b506002600460016101000a81548160ff02191690836003811115610f1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050565b6000818311610f3857829050610f3c565b8190505b92915050565b600081359050610f51816114b2565b92915050565b600081359050610f66816114c9565b92915050565b600060208284031215610f7e57600080fd5b6000610f8c84828501610f42565b91505092915050565b600060208284031215610fa757600080fd5b6000610fb584828501610f57565b91505092915050565b610fc781611292565b82525050565b610fd681611280565b82525050565b610fe5816112a4565b82525050565b610ff4816112f7565b82525050565b611003816112c3565b82525050565b6000611014826111da565b61101e81856111e5565b935061102e818560208601611309565b6110378161148d565b840191505092915050565b6000815461104f8161133c565b61105981866111e5565b945060018216600081146110745760018114611086576110b9565b60ff19831686526020860193506110b9565b61108f856111c5565b60005b838110156110b157815481890152600182019150602081019050611092565b808801955050505b50505092915050565b6110cb816112ed565b82525050565b60006020820190506110e66000830184610fcd565b92915050565b60006020820190506111016000830184610fbe565b92915050565b600060408201905061111c6000830185610fcd565b818103602083015261112e8184611042565b90509392505050565b600060208201905061114c6000830184610fdc565b92915050565b60006020820190506111676000830184610feb565b92915050565b60006020820190506111826000830184610ffa565b92915050565b600060208201905081810360008301526111a28184611009565b905092915050565b60006020820190506111bf60008301846110c2565b92915050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b6000611201826112ed565b915061120c836112ed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561124157611240611400565b5b828201905092915050565b6000611257826112ed565b9150611262836112ed565b92508282101561127557611274611400565b5b828203905092915050565b600061128b826112cd565b9050919050565b600061129d826112cd565b9050919050565b60008115159050919050565b60008190506112be8261149e565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611302826112b0565b9050919050565b60005b8381101561132757808201518184015260208101905061130c565b83811115611336576000848401525b50505050565b6000600282049050600182168061135457607f821691505b602082108114156113685761136761145e565b5b50919050565b6000611379826112c3565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113ac576113ab611400565b5b600182019050919050565b60006113c2826112ed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113f5576113f4611400565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b600481106114af576114ae61142f565b5b50565b6114bb81611280565b81146114c657600080fd5b50565b6114d2816112ed565b81146114dd57600080fd5b5056fea2646970667358221220e1a90f4f1164577900b52d8ecd296b52016fd3d7408bd06140b3f79e420edfdf64736f6c6343000800003368747470733a2f2f697066732e696f2f697066732f516d57384d443963766b75567542745662524b6851434c455356396256534472556f4e636f65556571657a466a613f66696c656e616d653d6473702e747874";



  let myContract = new web3.eth.Contract( ContractABI, {
    //  from: '0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C', // default from address
    //  gasPrice: '20000000000' // default gas price in wei, 20 gwei in this case
  });
  
 
  
  

console.log("asd");
  
  myContract.deploy({
      data:bc
  }).send({
      from: '0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C',
      gas: 4700000
  }).then((instance) => { 
      console.log("Contract mined at " + instance.options.address);
      AuctionCreatorAddress = instance.options.address; 
  
     instance.methods.auctions(0).call({from:'0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C'},(err, result) => {console.log("contract address  is ", result) ; AuctionAddress = result; 
   }).then(() => {
      auctioncontract =  new web3.eth.Contract( contractAuctionABI, AuctionAddress);
      auctioncontract.methods.owner().call({from:'0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C'},(err, result) => { console.log( "Owner is  " , Owner = result); hasFinished=true;  });
  })
      
  //AuctionAddressd = Buffer.from(AuctionAddress, 'hex');
  
  
  
  }).then(() => {  
  
     
  
      
  
  }).then(() => {  
  
      
  
  
    //  instance.methods.auctions(0).call({from:'0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C'},(err, result) => { AuctionAddress = result; console.log("contract address  is ", result) });
  //    console.log(AuctionAddressd);
      //auctioncontract =  new web3.eth.Contract( contractAuctionABI, AuctionAddress);
  
     // let auctioncreator = new web3.eth.Contract( ContractABI, helloInstance);
      //auctioncontract.methods.owner().call({from:'0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C'},(err, result) => { console.log( "Owner is  " , result) });
  
  });
  





    super(props)
    this.state = {
      AuctionCreatorAddress :'x',
      AuctionAddress :'',
       Owner : 's',
       hasFinished : false,
       HighestBidder:'',
       HighestBindingBid:0,
       timer:30,
       state:''
    }
  }


  
  setso = () =>{

    // auctioncreator.methods.owner().call({from:'0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C'},(err, result) => {  this.setState({owner: "bro"});});

   this.setState({AuctionCreatorAddress: AuctionCreatorAddress, AuctionAddress:AuctionAddress ,Owner: Owner, hasFinished :hasFinished, HighestBidder: HighestBidder, HighestBindingBid: HighestBindingBid, timer:timer, state: state});




}


callhigh= () =>{

 // auctioncontract.methods.owner().call({from:'0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C'},(err, result) => { console.log( "highest is  " , HighestBidder = result);   });
 const {AuctionAddress, hasFinished}  = this.state;

  if(hasFinished ){
  let auctioncontract =  new web3.eth.Contract( contractAuctionABI, AuctionAddress);
      auctioncontract.methods.highestBidder().call({from:'0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C'},(err, result) => { console.log( "highestbidder is  " , HighestBidder = result);  });
 
      auctioncontract.methods.highestBindingBid().call({from:'0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C'},(err, result) => { console.log( "highestbinding bid  is  " , HighestBindingBid = web3.utils.fromWei(result, 'ether'));  });
 
      state="Contract has been created";
      timer--;
    }




}



componentDidMount(){
  this.callhigh();

  this.setso();

 this.fetchInterval = setInterval(
  () =>{ 

    if(timer > 0)
    { 
      this.callhigh();
     this.setso() ;
    }  else {
      
      timer=0;
      let auctioncontract =  new web3.eth.Contract( contractAuctionABI, AuctionAddress);
      auctioncontract.methods.finalizeAuction().send({from:'0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C', gas:200000},(err, result) => { console.log( "finilizeAUctoin been called  " , result);  });
 
 
      state=`Auction is now Closed. ${HighestBidder} won the Auction`;
      this.setso();
      clearInterval(this.fetchInterval);
    }
   
  
  
  
  },
  POLL_INTERVAL_MS
  );

}






componentWillUnmount(){
  clearInterval(this.fetchInterval);

}


  render() {
const {Owner, AuctionCreatorAddress, AuctionAddress, hasFinished,HighestBindingBid , HighestBidder, timer, state}  = this.state;

    return (
      <div>
        <Navbar account={this.state.account} />
        { this.state.loading
          ? <div id="loader" className="text-center mt-5"><p>Loading...</p></div>
          : <Main
            // Code...
            />
    
          }
        
          <h3>{state} </h3>
        <div> <div>Owner is: {Owner}</div>

              <div> Auction Creator Adress is: {AuctionCreatorAddress} </div>
              <div>Auction Address is : {AuctionAddress} </div>
              <div>HighestBidder is  : {HighestBidder} </div>
              <div>HighestBindingBid is  : {HighestBindingBid} Ether</div>
              <div>timer is   : {timer} </div>
              <br></br>
              <h2>How to Bid</h2>
              <div> Its simple all you need to do is send ether to the Auction Address listed above.Dont worry this auction uses fake ether on the rinkeby testnet, look up rinkbyfauct to get some fake ether .Note sending ether less than the HighestBindingBid will result in a transaction fail. if you bid the highest when the timer runs out you win. If you are the winner just send a transaction to the Auction Address and check the log of it on etherscan there you will see your prize (make sure to convert  log to text and paste it in the web broswer url).</div>
              <br></br>
              <h2>Summary</h2>
              <div> With this project idea I wanted to create an aution that is decentralized and anyone can participate without having to put your credit card information, bank information or any personal information. All you need is ether wallet. I also wanted an auction where it doesnt store users private et key in a server since doing that will not make users the true and only owner of the ethereum account. Accounts on exchanges like binance, users on there do not posses the private key which does not make users the owner of the account. Keep in mind you are only the true owner if you possess the private key. The problem with not having the users private key is making calls like canceling your bid in the auction not waiting until the end for the money to return back to you. Multiple ways this can be solved. One way is making a user send a spcific amount to the contract lets say 3$ like a fee for cancelation and the receive function can handle that in the contract. Another and better way would be for a the auction to create a privatekey and publickey per user request. the user will send money to the publickey generated and from there users will have buttons to bid, cancel auction, etc and that generate public key will interact with the contract, and once the auction is done or anytime the user can send ether from the generated publickey back to any wallet of there choosing (which should be done immediately). </div>
        </div>
      </div>
    );
  }
}

export default App;